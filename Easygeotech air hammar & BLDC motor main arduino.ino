//*****************************************************
//**A 아두이노 코딩**
//1. A는 BLDC 제어 및 솔레노이드 밸브 ON/OFF 시간 제어
//2. 아두이노 B에게 섹터 확인용 신호 값을 전달한다
//3. 모든 섹터가 센서가 보기에 문제가 없다면 사이렌을 울리며 멈춘다

//** A아두이노 필요한 모듈 및 부품**
//1. 4채널 B타입 릴레이 1개 {AS1,BLDC,AIRH(시그널용,각도 회전 BLDC, 에어 해머(슬레노이드 밸브)) 최소 3채널 필요}
//2. 아두이노 및 점퍼선
//3. BLDC 및 BLDC 드라이버 (가변 저항 조절기 포함)
//4. 솔레노이드 밸브
//********************************************************************
//********************************************************************
//** 값 저장용 및 확인용 변수 선언**

 //---------------------------------------------------------------------------------------------
 //                                   ★★★★ 테 스 터 용 ★★★★
 //---------------------------------------------------------------------------------------------
 //---------------------------------------------------------------------------------------------
 //                                   D  1 ~ 4  0 변 수 저 장 구 역 
 //---------------------------------------------------------------------------------------------
 //▶▶▶▶▶▶설명◀◀◀◀◀◀◀
 //합격 / 불합격 저장용 변수들 D1 ~ D 40
 
int D1 = 0; 
int D2 = 0;
int D3 = 0; 
int D4 = 0; 
int D5 = 0; 

int D6 = 0; 
int D7 = 0; 
int D8 = 0; 
int D9 = 0; 
int D10 = 0; 

int D11 = 0; 
int D12 = 0; 
int D13 = 0; 
int D14 = 0; 
int D15 = 0; 

int D16 = 0; 
int D17 = 0; 
int D18 = 0; 
int D19 = 0; 
int D20 = 0; 

int D21 = 0; 
int D22 = 0; 
int D23 = 0;
int D24 = 0;  
int D25 = 0; 

int D26 = 0; 
int D27 = 0; 
int D28 = 0; 
int D29 = 0; 
int D30 = 0; 

int D31 = 0; 
int D32 = 0; 
int D33 = 0; 
int D34 = 0; 
int D35 = 0; 

int D36 = 0; 
int D37 = 0;
int D38 = 0;
int D39 = 0;
int D40 = 0;

 //---------------------------------------------------------------------------------------------
 //                                  A  N  1 ~ 3  변 수 저 장 구 역 
 //---------------------------------------------------------------------------------------------
 //▶▶▶▶▶▶설명◀◀◀◀◀◀◀
 //AN = ANGLE의 약자로서 AN-은 각자의 상태를 의미한다.
 //예시로 AN1일 때 승인이 된다면 D2구역으로 넘어가고 변수도 AN2가 된다
 //확인 저장용 변수
 
int AN1 = 0; //|ANGLE1~40| 각 섹터 구역 확인용 변수 값 저장
int AN2 = 0;
int AN3 = 0;
int AN4 = 0; 
int AN5 = 0; 

int AN6 = 0; 
int AN7 = 0; 
int AN8 = 0; 
int AN9 = 0; 
int AN10 = 0; 

int AN11 = 0; 
int AN12 = 0; 
int AN13 = 0; 
int AN14 = 0; 
int AN15 = 0; 

int AN16 = 0; 
int AN17 = 0; 
int AN18 = 0; 
int AN19 = 0; 
int AN20 = 0; 

int AN21 = 0; 
int AN22 = 0; 
int AN23 = 0;
int AN24 = 0; 
int AN25 = 0; 

int AN26 = 0; 
int AN27 = 0; 
int AN28 = 0; 
int AN29 = 0; 
int AN30 = 0; 

int AN31 = 0; 
int AN32 = 0; 
int AN33 = 0; 
int AN34 = 0; 
int AN35 = 0; 

int AN36 = 0; 
int AN37 = 0; 
int AN38 = 0; 
int AN39 = 0; 
int AN40 = 0;

 //---------------------------------------------------------------------------------------------
 //                                  기 타 변 수 저 장 구 역 
 //---------------------------------------------------------------------------------------------
int AS1 = 3; //|A to B SIGNAL 1| A to B 신호용 릴레이 1 변수 값 저장

int BS1 = 7; //|B to A SIGNAL 1| B에게서 받은 2-1 신호 값 저장용 변수
int BS2 = 8; //|B to A SIGNAL 2| B에게서 받은 2-2 신호 값 저장용 변수

int BLDC = 4; //|BLDC| 각도 회전용 BLDC 작동용 릴레이 변수 값 저장
int AIRH = 5; //|에어 해머| 에어 해머(솔레노이드 밸브) 작동용 릴레이 변수 값 저장
int SIRN = 6; //|사이렌| 최종 작업 종료 시 사이렌 작동용 릴레이 변수 값 저장
//********************************************************************
//********************************************************************

void setup() { 
 //▶▶▶▶▶▶설명◀◀◀◀◀◀◀
 //사전 아두이노가 켜졌을 때 세팅하는 준비 단계
 //어떤 디지털 핀을 OUTPUT으로 설정해 LED나 다른 릴레이 모듈을 켜 작동 시킬지 정하거나
 //어떤 디지털 핀 혹은 아날로그 핀을 INPUT_PULLUP 저항으로 설정해 값을 받아들일지 정한다.
  
Serial.begin(9600); //시리얼 통신 BAUD RATE 9600 주파수 선언

pinMode(BS1,INPUT_PULLUP); //|B to A SIGNAL 1| B to A 릴레이에서 온 신호 2-1 INPUT 값 풀업 저항으로 선언
pinMode(BS2,INPUT_PULLUP); //|B to A SIGNAL 2| B to A 릴레이에서 온 신호 2-2 INPUT 값 풀업 저항으로 선언

pinMode(AS1,OUTPUT); //|SIGNAL 1| A to B 릴레이 1 아웃풋 선언
pinMode(BLDC,OUTPUT); //|BLDC| 각도 회전용 BLDC 작동용 릴레이 아웃풋 선언
pinMode(AIRH,OUTPUT); //|에어 해머|에어 해머(솔레노이드 밸브) 작동용 릴레이 아웃풋 선언
pinMode(SIRN,OUTPUT); //|사이렌| 최종 작업 종료 시 사이렌 작동용 릴레이 아웃풋 선언

AN1 = 1; //최초 220V 전원 인가 시 아두이노 SET UP 과정에서 AN1을 1로 둠으로써 작업 시작
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//time gap 수정중
void loop() {
 //---------------------------------------------------------------------------------------------
 //                            D 1  ~  D   5 변 수 상 태 확 인 용
 //---------------------------------------------------------------------------------------------
 //▶▶▶▶▶▶설명◀◀◀◀◀◀◀
 //아래 D1 ~ D50까지는 각 구역 50개를 나눈 것이며
 //Serial.println의 ln은 다음 띄어쓰기다 
 //결국 D1:의 상태 값 + 다음줄의 반복이다
 //D1..D2..순으로 계속 반복.
 
 Serial.print("D1 : ");
 Serial.println(D1);
 Serial.print("D2 : ");
 Serial.println(D2);
 Serial.print("D3 : ");
 Serial.println(D3);
 Serial.print("D4 : ");
 Serial.println(D4);
 Serial.print("D5 : ");
 Serial.println(D5);
 Serial.print("D6 : ");
 Serial.println(D6);
 Serial.print("D7 : ");
 Serial.println(D7);
 Serial.print("D8 : ");
 Serial.println(D8);
 Serial.print("D9 : ");
 Serial.println(D9);
 Serial.print("D10 : ");
 Serial.println(D10);
 Serial.print("D11 : ");
 Serial.println(D11);
 Serial.print("D12 : ");
 Serial.println(D12);
 Serial.print("D13 : ");
 Serial.println(D13);
 Serial.print("D14 : ");
 Serial.println(D14);
 Serial.print("D15 : ");
 Serial.println(D15);
 Serial.print("D16 : ");
 Serial.println(D16);
 Serial.print("D17 : ");
 Serial.println(D17);
 Serial.print("D18 : ");
 Serial.println(D18);
 Serial.print("D19 : ");
 Serial.println(D19);
 Serial.print("D20 : ");
 Serial.println(D20);
 Serial.print("D21 : ");
 Serial.println(D21);
 Serial.print("D22 : ");
 Serial.println(D22);
 Serial.print("D23 : ");
 Serial.println(D23);
 Serial.print("D24 : ");
 Serial.println(D24);
 Serial.print("D25 : ");
 Serial.println(D25);
 Serial.print("D26 : ");
 Serial.println(D26);
 Serial.print("D27 : ");
 Serial.println(D27);
 Serial.print("D28 : ");
 Serial.println(D28);
 Serial.print("D29 : ");
 Serial.println(D29);
 Serial.print("D30 : ");
 Serial.println(D30);
 Serial.print("D31 : ");
 Serial.println(D31);
 Serial.print("D32 : ");
 Serial.println(D32);
 Serial.print("D33 : ");
 Serial.println(D33);
 Serial.print("D34 : ");
 Serial.println(D34);
 Serial.print("D35 : ");
 Serial.println(D35);
 Serial.print("D36 : ");
 Serial.println(D36);
 Serial.print("D37 : ");
 Serial.println(D37);
 Serial.print("D38 : ");
 Serial.println(D38);
 Serial.print("D39 : ");
 Serial.println(D39);
 Serial.print("D40 : ");
 Serial.println(D40);
 Serial.println("------------------------------"); //시리얼 모니터 가독성 증가용 줄
 delay(10); // 겹침 방지용 delay(10);
 //---------------------------------------------------------------------------------------------
 //                         A   N   n   ( ▲ n은 특 정 구 역 을 의 미 함 ▲)
 //---------------------------------------------------------------------------------------------
 //▶▶▶▶▶▶설명◀◀◀◀◀◀◀
//AN1 부터 50은 반복이기에 주석 포함하여 이곳에 작성

//AN1은 구역 확인용 변수다
//처음 프로그램을 시작할 떄 AN1= 1이 된다

//AN1에서 합격 불합격 신호를 ARDUINO B로 부터 신호를 받은 뒤
//에어해머가 작동하고 다시 신호를 보낸다
//신호를 받고 BLDC 모터가 작동하고 (각도가 이동한 뒤)

//AN1 -> AN2로 자동으로 넘어간다 (AN1을 1으로 하고 무슨 결과던 간에 AN1 = 0으로 변경하고 AN2 =1로 바꾼다)

//만약 AN1 구역에서 합격일 시에 D1에 값을 지정한다 // 물론 불합격이여도 값을 저장한다
// 합격일 시 D1 = 1 // 불합격 D1 =0

//그 값은 저장되고 넘어간다 (혹여 한 바퀴를 다 돌고 같은 구역 검사 했을 때 전에 값이 합격이었어도 불합격으로 변화할 수도 있게 설정)

//BLDC모터가 작동하고 (각도가 이동한 뒤)
//D2에 저장 후 AN2 구역으로 넘어간다
//반복한다

//***만약 D1 = 1 ~~~D50 = 1 모든 구역이 전부 합격 하면 아래 함수에 작성 한대로 움직인다 ***
 //---------------------------------------------------------------------------------------------
 // ▶▶▶▶▶▶▶▶                               A   N   1                         ◀◀◀◀◀◀◀◀◀◀
 //---------------------------------------------------------------------------------------------
// -------------------------------------------------------------------●합격●
if(AN1 ==1 && digitalRead(BS1) ==LOW){ //AN1 구역에서 합격일 때
D1 = 1; // AN1 구역이니까 D1은 합격했으니 1로
AN1 = 0; // 다시 AN1은 0으로 선언해서 AN1은 검사가 끝났다는 의미
AN2 = 1; // 새로운 AN2은 1로 선언해서 AN2 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN1 ==1 && digitalRead(BS2) ==LOW){ //AN1 구역에서 불합격일 때
D1 = 0; // AN1 구역의 D1은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분 // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN1 = 0; // 다시 AN1은 0으로 선언해서 AN1은 검사가 끝났다는 의미
AN2 = 1; // 새로운 AN2은 1로 선언해서 AN2 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                                  A   N   2                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------

// -------------------------------------------------------------------●합격●
if(AN2 ==1 && digitalRead(BS1) ==LOW){  //AN2 구역에서 합격일 때
D2 = 1; //AN2 구역의 D2은 합격 했으니 1으로
AN2 = 0; // 다시 AN2은 0으로 선언해서 AN2은 검사가 끝났다는 의미
AN3 = 1; // 새로운 AN3은 1로 선언해서 AN3 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다

}

// -------------------------------------------------------------------○불합격○
if(AN2 ==1 && digitalRead(BS2) ==LOW){ //AN2 구역에서 불합격일 때
D2 = 0; // AN2 구역의 D2은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN2 =0; // 다시 AN2은 0으로 선언해서 AN2은 검사가 끝났다는 의미
AN3 =1; // 새로운 AN3은 1로 선언해서 AN3 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
  

//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                               A   N   3                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN3 ==1 && digitalRead(BS1) ==LOW){ //AN3 구역에서 합격일 때
D3 = 1; //AN3 구역의 D3은 합격 했으니 1으로
AN3 = 0; // 다시 AN3은 0으로 선언해서 AN3은 검사가 끝났다는 의미
AN4 = 1; // 새로운 AN4은 1로 선언해서 AN4 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
// -------------------------------------------------------------------○불합격○
if(AN3 ==1 && digitalRead(BS2) ==LOW){ //AN3 구역에서 불합격일 때
D3 = 0; // AN3 구역의 D3은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN3 =0; // 다시 AN3은 0으로 선언해서 AN3은 검사가 끝났다는 의미
AN4 =1; // 새로운 AN4은 1로 선언해서 AN4 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}


//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                                A   N   4                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN4 ==1 && digitalRead(BS1) ==LOW){ //AN4 구역에서 합격일 때
D4 = 1; //AN4 구역의 D4은 합격 했으니 1으로
AN4 = 0; // 다시 AN4은 0으로 선언해서 AN4은 검사가 끝났다는 의미
AN5 = 1; // 새로운 AN5은 1로 선언해서 AN5 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN4 ==1 && digitalRead(BS2) ==LOW){ //AN4 구역에서 불합격일 때
D4 = 0; // AN4 구역의 D4은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN4 = 0; // 다시 AN4은 0으로 선언해서 AN4은 검사가 끝났다는 의미
AN5 = 1; // 새로운 AN5은 1로 선언해서 AN5 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                              A   N   5                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN5 ==1 && digitalRead(BS1) ==LOW){ //AN5 구역에서 합격일 때
D5 = 1; //AN5 구역의 D5은 합격 했으니 1으로
AN5 = 0; // 다시 AN5은 0으로 선언해서 AN5은 검사가 끝났다는 의미
AN6 = 1; // 새로운 AN6은 1로 선언해서 AN6 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN5 ==1 && digitalRead(BS2) ==LOW){ //AN5 구역에서 불합격일 때
D5 = 0; // AN5 구역의 D5은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN5 = 0; // 다시 AN5은 0으로 선언해서 AN5은 검사가 끝났다는 의미
AN6 = 1; // 새로운 AN6은 1로 선언해서 AN6 검사를 시작할거라는 의미
 
ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
// ▶▶▶▶▶▶▶▶▶                           A   N   6                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN6 ==1 && digitalRead(BS1) ==LOW){ //AN6 구역에서 합격일 때
D6 = 1; //AN6 구역의 D6은 합격 했으니 1으로
AN6 = 0; // 다시 AN6은 0으로 선언해서 AN6은 검사가 끝났다는 의미
AN7 = 1; // 새로운 AN7은 1로 선언해서 AN7 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN6 ==1 && digitalRead(BS2) ==LOW){//AN6 구역에서 불합격일 때
D6 = 0; // AN6 구역의 D6은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN6 = 0; // 다시 AN6은 0으로 선언해서 AN6은 검사가 끝났다는 의미
AN7 = 1; // 새로운 AN7은 1로 선언해서 AN7 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                              A   N   7                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN7 ==1 && digitalRead(BS1) ==LOW){ //AN7 구역에서 합격일 때
D7 = 1; //AN7 구역의 D7은 합격 했으니 1으로
AN7 = 0; // 다시 AN7은 0으로 선언해서 AN7은 검사가 끝났다는 의미
AN8 = 1; // 새로운 AN8은 1로 선언해서 AN8 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN7 ==1 && digitalRead(BS2) ==LOW){ //AN7 구역에서 불합격일 때
D7 = 0; // AN7 구역의 D7은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN7 = 0; // 다시 AN7은 0으로 선언해서 AN7은 검사가 끝났다는 의미
AN8 = 1; // 새로운 AN8은 1로 선언해서 AN8 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                             A   N   8                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN8 ==1 && digitalRead(BS1) ==LOW){ //AN8 구역에서 합격일 때
D8 = 1; //AN8 구역의 D8은 합격 했으니 1으로
AN8 = 0; // 다시 AN8은 0으로 선언해서 AN8은 검사가 끝났다는 의미
AN9 = 1; // 새로운 AN9은 1로 선언해서 AN9 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN8 ==1 && digitalRead(BS2) ==LOW){ //AN8 구역에서 불합격일 때
D8 = 0; // AN8 구역의 D8은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN8 = 0; // 다시 AN8은 0으로 선언해서 AN8은 검사가 끝났다는 의미
AN9 = 1; // 새로운 AN9은 1로 선언해서 AN9 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                              A   N   9                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN9 ==1 && digitalRead(BS1) ==LOW){ //AN9 구역에서 합격일 때
D9 = 1; //AN9 구역의 D9은 합격 했으니 1으로
AN9 = 0; // 다시 AN9은 0으로 선언해서 AN9은 검사가 끝났다는 의미
AN10 = 1; // 새로운 AN10은 1로 선언해서 AN10 검사를 시작할거라는 의미


ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN9 ==1 && digitalRead(BS2) ==LOW){ //AN9 구역에서 불합격일 때
D9 = 0; // AN9 구역의 D9은 불합격 했으니 0으로
AIR();  //에어해머 작동 ******************************************불합격과 차이는 이 부분
AN9 = 0;  //다시 AN9은 0으로 선언해서 AN9은 검사가 끝났다는 의미
AN10 = 1; // 새로운 AN10은 1로 선언해서 AN10 검사를 시작할거라는 의미


ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                            A   N   1   0                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN10 ==1 && digitalRead(BS1) ==LOW){ //AN10 구역에서 합격일 때
D10 = 1; //AN10 구역의 D10은 합격 했으니 1으로
AN10 = 0; // 다시 AN10은 0으로 선언해서 AN10은 검사가 끝났다는 의미
AN11 = 1; // 새로운 AN11은 1로 선언해서 AN11 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN10 ==1 && digitalRead(BS2) ==LOW){ //AN10 구역에서 불합격일 때
D10 = 0; // AN10 구역의 D10은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN10 = 0; // 다시 AN10은 0으로 선언해서 AN10은 검사가 끝났다는 의미
AN11 = 1; // 새로운 AN11은 1로 선언해서 AN11 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                           A   N   1   1                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------

// -------------------------------------------------------------------●합격●
if(AN11 ==1 && digitalRead(BS1) ==LOW){ //AN11 구역에서 합격일 때
D11 = 1; //AN11 구역의 D11은 합격 했으니 1으로
AN11 = 0; // 다시 AN11은 0으로 선언해서 AN11은 검사가 끝났다는 의미
AN12 = 1; // 새로운 AN12은 1로 선언해서 AN12 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN11 ==1 && digitalRead(BS2) ==LOW){ //AN11 구역에서 불합격일 때
D11 = 0; // AN11 구역의 D11은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN11 = 0; // 다시 AN11은 0으로 선언해서 AN11은 검사가 끝났다는 의미
AN12 = 1;  // 새로운 AN12은 1로 선언해서 AN12 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                             A   N   1   2                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------

// -------------------------------------------------------------------●합격●
if(AN12 ==1 && digitalRead(BS1) ==LOW){ //AN12 구역에서 합격일 때
D12 = 1; //AN12 구역의 D12은 합격 했으니 1으로
AN12 = 0; // 다시 AN12은 0으로 선언해서 AN12은 검사가 끝났다는 의미
AN13 = 1; // 새로운 AN13은 1로 선언해서 AN13 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN12 ==1 && digitalRead(BS2) ==LOW){ //AN12 구역에서 불합격일 때
D12 = 0; // AN12 구역의 D12은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN12 = 0; // 다시 AN12은 0으로 선언해서 AN12은 검사가 끝났다는 의미
AN13 = 1; // 새로운 AN13은 1로 선언해서 AN13 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                            A   N   1   3                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------

// -------------------------------------------------------------------●합격●
if(AN13 ==1 && digitalRead(BS1) ==LOW){ //AN13 구역에서 합격일 때
D13 = 1; //AN13 구역의 D13은 합격 했으니 1으로
AN13 = 0; // 다시 AN13은 0으로 선언해서 AN13은 검사가 끝났다는 의미
AN14 = 1; // 새로운 AN14은 1로 선언해서 AN14 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN13 ==1 && digitalRead(BS2) ==LOW){ //AN13 구역에서 불합격일 때
D13 = 0; // AN13 구역의 D13은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN13 = 0; // 다시 AN13은 0으로 선언해서 AN13은 검사가 끝났다는 의미
AN14 = 1; // 새로운 AN14은 1로 선언해서 AN14 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                             A   N   1   4                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------

// -------------------------------------------------------------------●합격●
if(AN14 ==1 && digitalRead(BS1) ==LOW){ //AN14 구역에서 합격일 때
D14 = 1; //AN14 구역의 D14은 합격 했으니 1으로
AN14 = 0; // 다시 AN14은 0으로 선언해서 AN14은 검사가 끝났다는 의미
AN15 = 1; // 새로운 AN15은 1로 선언해서 AN15 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN14 ==1 && digitalRead(BS2) ==LOW){ //AN14 구역에서 불합격일 때
D14 = 0; // AN14 구역의 D14은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN14 = 0; // 다시 AN14은 0으로 선언해서 AN14은 검사가 끝났다는 의미
AN15 = 1; // 새로운 AN15은 1로 선언해서 AN15 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                              A   N   1   5                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN15 ==1 && digitalRead(BS1) ==LOW){ //AN15 구역에서 합격일 때
D15 = 1; //AN15 구역의 D15은 합격 했으니 1으로
AN15 = 0; // 다시 AN15은 0으로 선언해서 AN15은 검사가 끝났다는 의미
AN16 = 1; // 새로운 AN16은 1로 선언해서 AN16 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN15 ==1 && digitalRead(BS2) ==LOW){ //AN15 구역에서 불합격일 때
D15 = 0; // AN15 구역의 D15은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN15 = 0; // 다시 AN15은 0으로 선언해서 AN15은 검사가 끝났다는 의미
AN16 = 1; // 새로운 AN16은 1로 선언해서 AN16 검사를 시작할거라는 의미
 
ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                            A   N   1   6                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN16 ==1 && digitalRead(BS1) ==LOW){ //AN16 구역에서 합격일 때
D16 = 1; //AN16 구역의 D16은 합격 했으니 1으로
AN16 = 0; // 다시 AN16은 0으로 선언해서 AN16은 검사가 끝났다는 의미
AN17 = 1; // 새로운 AN17은 1로 선언해서 AN17 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN16 ==1 && digitalRead(BS2) ==LOW){ //AN16 구역에서 불합격일 때
D16 = 0; // AN16 구역의 D16은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN16 = 0; // 다시 AN16은 0으로 선언해서 AN16은 검사가 끝났다는 의미
AN17 = 1; // 새로운 AN17은 1로 선언해서 AN17 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                           A   N   1   7                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN17 ==1 && digitalRead(BS1) ==LOW){ //AN17 구역에서 합격일 때
D17 = 1; //AN17 구역의 D17은 합격 했으니 1으로
AN17 = 0; // 다시 AN17은 0으로 선언해서 AN17은 검사가 끝났다는 의미
AN18 = 1; // 새로운 AN18은 1로 선언해서 AN18 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN17 ==1 && digitalRead(BS2) ==LOW){ //AN17 구역에서 불합격일 때
D17 = 0; // AN17 구역의 D17은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN17 = 0; // 다시 AN17은 0으로 선언해서 AN17은 검사가 끝났다는 의미
AN18 = 1; // 새로운 AN18은 1로 선언해서 AN18 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                           A   N   1   8                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN18 ==1 && digitalRead(BS1) ==LOW){ //AN18 구역에서 합격일 때
D18 = 1; //AN18 구역의 D18은 합격 했으니 1으로
AN18 = 0;  // 다시 AN18은 0으로 선언해서 AN18은 검사가 끝났다는 의미
AN19 = 1; // 새로운 AN19은 1로 선언해서 AN19 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN18 ==1 && digitalRead(BS2) ==LOW){ //AN18 구역에서 불합격일 때
D18 = 0; // AN18 구역의 D18은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN18 = 0; // 다시 AN18은 0으로 선언해서 AN18은 검사가 끝났다는 의미
AN19 = 1; // 새로운 AN19은 1로 선언해서 AN19 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                             A   N   1   9                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN19 ==1 && digitalRead(BS1) ==LOW){ //AN19 구역에서 합격일 때
D19 = 1; //AN19 구역의 D19은 합격 했으니 1으로
AN19 = 0; // 다시 AN19은 0으로 선언해서 AN19은 검사가 끝났다는 의미
AN20 = 1; // 새로운 AN20은 1로 선언해서 AN20 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN19 ==1 && digitalRead(BS2) ==LOW){ //AN19 구역에서 불합격일 때
D19 = 0; // AN19 구역의 D19은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN19 = 0; // 다시 AN19은 0으로 선언해서 AN19은 검사가 끝났다는 의미
AN20 = 1; // 새로운 AN20은 1로 선언해서 AN20 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                             A   N   2   0                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN20 ==1 && digitalRead(BS1) ==LOW){ //AN20 구역에서 합격일 때
D20 = 1; //AN20 구역의 D20은 합격 했으니 1으로
AN20 = 0; // 다시 AN20은 0으로 선언해서 AN20은 검사가 끝났다는 의미
AN21 = 1; // 새로운 AN21은 1로 선언해서 AN21 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN20 ==1 && digitalRead(BS2) ==LOW){ //AN20 구역에서 불합격일 때
D20 = 0; // AN20 구역의 D20은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN20 = 0; // 다시 AN20은 0으로 선언해서 AN20은 검사가 끝났다는 의미
AN21 = 1; // 새로운 AN21은 1로 선언해서 AN21 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                          A   N   2   1                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN21 ==1 && digitalRead(BS1) ==LOW){ //AN21 구역에서 합격일 때
D21 = 1; //AN21 구역의 D21은 합격 했으니 1으로
AN21 = 0; // 다시 AN21은 0으로 선언해서 AN21은 검사가 끝났다는 의미
AN22 = 1; // 새로운 AN22은 1로 선언해서 AN22 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN21 ==1 && digitalRead(BS2) ==LOW){ //AN21 구역에서 불합격일 때
D21 = 0; // AN21 구역의 D21은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN21 = 0; // 다시 AN21은 0으로 선언해서 AN21은 검사가 끝났다는 의미
AN22 = 1; // 새로운 AN22은 1로 선언해서 AN22 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                          A   N   2   2                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN22 ==1 && digitalRead(BS1) ==LOW){ //AN22 구역에서 합격일 때
D22 = 1; //AN22 구역의 D22은 합격 했으니 1으로
AN22 = 0; // 다시 AN22은 0으로 선언해서 AN22은 검사가 끝났다는 의미
AN23 = 1; // 새로운 AN23은 1로 선언해서 AN23 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN22 ==1 && digitalRead(BS2) ==LOW){ //AN22 구역에서 불합격일 때
D22 = 0; // AN22 구역의 D22은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN22 = 0; // 다시 AN22은 0으로 선언해서 AN22은 검사가 끝났다는 의미
AN23 = 1; // 새로운 AN23은 1로 선언해서 AN23 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                             A   N   2   3                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN23 ==1 && digitalRead(BS1) ==LOW){ //AN23 구역에서 합격일 때
D23 = 1; //AN23 구역의 D23은 합격 했으니 1으로
AN23 = 0; // 다시 AN23은 0으로 선언해서 AN23은 검사가 끝났다는 의미
AN24 = 1; // 새로운 AN24은 1로 선언해서 AN24 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN23 ==1 && digitalRead(BS2) ==LOW){ //AN23 구역에서 불합격일 때
D23 = 0; // AN23 구역의 D23은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN23 = 0; // 다시 AN23은 0으로 선언해서 AN23은 검사가 끝났다는 의미
AN24 = 1; // 새로운 AN24은 1로 선언해서 AN24 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                            A   N   2   4                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN24 ==1 && digitalRead(BS1) ==LOW){ //AN24 구역에서 합격일 때
D24 = 1; //AN24 구역의 D24은 합격 했으니 1으로
AN24 = 0; // 다시 AN24은 0으로 선언해서 AN24은 검사가 끝났다는 의미
AN25 = 1; // 새로운 AN25은 1로 선언해서 AN25 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN24 ==1 && digitalRead(BS2) ==LOW){ //AN24 구역에서 불합격일 때
D24 = 0; // AN24 구역의 D24은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN24 = 0; // 다시 AN24은 0으로 선언해서 AN24은 검사가 끝났다는 의미
AN25 = 1; // 새로운 AN25은 1로 선언해서 AN25 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                           A   N   2   5                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN25 ==1 && digitalRead(BS1) ==LOW){ //AN25 구역에서 합격일 때
D25 = 1; //AN25 구역의 D25은 합격 했으니 1으로
AN25 = 0; // 다시 AN25은 0으로 선언해서 AN25은 검사가 끝났다는 의미
AN26 = 1; // 새로운 AN26은 1로 선언해서 AN26 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN25 ==1 && digitalRead(BS2) ==LOW){ //AN25 구역에서 불합격일 때
D25 = 0; // AN25 구역의 D25은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN25 = 0; // 다시 AN25은 0으로 선언해서 AN25은 검사가 끝났다는 의미
AN26 = 1; // 새로운 AN26은 1로 선언해서 AN26 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                             A   N   2   6                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------

// -------------------------------------------------------------------●합격●
if(AN26 ==1 && digitalRead(BS1) ==LOW){ //AN26 구역에서 합격일 때
D26 = 1; //AN26 구역의 D26은 합격 했으니 1으로
AN26 = 0; // 다시 AN26은 0으로 선언해서 AN26은 검사가 끝났다는 의미
AN27 = 1; // 새로운 AN27은 1로 선언해서 AN27 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN26 ==1 && digitalRead(BS2) ==LOW){ //AN26 구역에서 불합격일 때
D26 = 0; // AN26 구역의 D26은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN26 = 0; // 다시 AN26은 0으로 선언해서 AN26은 검사가 끝났다는 의미
AN27 = 1; // 새로운 AN27은 1로 선언해서 AN27 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                              A   N   2   7                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN27 ==1 && digitalRead(BS1) ==LOW){ //AN27 구역에서 합격일 때
D27 = 1; //AN27 구역의 D27은 합격 했으니 1으로
AN27 = 0; // 다시 AN27은 0으로 선언해서 AN27은 검사가 끝났다는 의미
AN28 = 1; // 새로운 AN28은 1로 선언해서 AN28 검사를 시작할거라는 의미
 
ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN27 ==1 && digitalRead(BS2) ==LOW){ //AN27 구역에서 불합격일 때
D27 = 0; // AN27 구역의 D27은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN27 = 0; // 다시 AN27은 0으로 선언해서 AN27은 검사가 끝났다는 의미
AN28 = 1; // 새로운 AN28은 1로 선언해서 AN28 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                               A   N   2   8                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
// -------------------------------------------------------------------●합격●
if(AN28 ==1 && digitalRead(BS1) ==LOW) { //AN28 구역에서 합격일 때
D28 = 1; //AN28 구역의 D28은 합격 했으니 1으로
AN28 = 0; // 다시 AN28은 0으로 선언해서 AN28은 검사가 끝났다는 의미
AN29 = 1; // 새로운 AN29은 1로 선언해서 AN29 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN28 ==1 && digitalRead(BS2) ==LOW){ //AN28 구역에서 불합격일 때
D28 = 0; // AN28 구역의 D28은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN28 = 0; // 다시 AN28은 0으로 선언해서 AN28은 검사가 끝났다는 의미
AN29 = 1; // 새로운 AN29은 1로 선언해서 AN29 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
// ▶▶▶▶▶▶▶▶▶                             A   N   2   9                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN29 ==1 && digitalRead(BS1) ==LOW){ //AN29 구역에서 합격일 때
D29 = 1;  //AN29 구역의 D29은 합격 했으니 1으로
AN29 = 0; // 다시 AN29은 0으로 선언해서 AN29은 검사가 끝났다는 의미
AN30 = 1; // 새로운 AN30은 1로 선언해서 AN30 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN29 ==1 && digitalRead(BS2) ==LOW){ //AN29 구역에서 불합격일 때
D29 = 0; // AN29 구역의 D29은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN29 = 0; // 다시 AN29은 0으로 선언해서 AN29은 검사가 끝났다는 의미
AN30 = 1; // 새로운 AN30은 1로 선언해서 AN30 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                             A   N   3   0                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN30 ==1 && digitalRead(BS1) ==LOW){ //AN30 구역에서 합격일 때
D30 = 1;  //AN30 구역의 D30은 합격 했으니 1으로
AN30 = 0; // 다시 AN30은 0으로 선언해서 AN30은 검사가 끝났다는 의미
AN31 = 1; // 새로운 AN31은 1로 선언해서 AN31 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN30 ==1 && digitalRead(BS2) ==LOW){ //AN30 구역에서 불합격일 때
D30 = 0; // AN30 구역의 D30은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN30 = 0;  // 다시 AN30은 0으로 선언해서 AN30은 검사가 끝났다는 의미
AN31 = 1; // 새로운 AN31은 1로 선언해서 AN31 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                            A   N   3   1                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN31 ==1 && digitalRead(BS1) ==LOW){ //AN31 구역에서 합격일 때
D31 = 1; //AN31 구역의 D31은 합격 했으니 1으로
AN31 = 0;// 다시 AN31은 0으로 선언해서 AN31은 검사가 끝났다는 의미
AN32 = 1; // 새로운 AN32은 1로 선언해서 AN32 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN31 ==1 && digitalRead(BS2) ==LOW){ //AN31 구역에서 불합격일 때
D31 = 0; // AN31 구역의 D31은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN31 = 0; // 다시 AN31은 0으로 선언해서 AN31은 검사가 끝났다는 의미
AN32 = 1; // 새로운 AN32은 1로 선언해서 AN32 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
// ▶▶▶▶▶▶▶▶▶                             A   N   3   2                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN32 ==1 && digitalRead(BS1) ==LOW){ //AN32 구역에서 합격일 때
D32 = 1; //AN32 구역의 D32은 합격 했으니 1으로
AN32 = 0; // 다시 AN32은 0으로 선언해서 AN32은 검사가 끝났다는 의미
AN33 = 1; // 새로운 AN33은 1로 선언해서 AN33 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN32 ==1 && digitalRead(BS2) ==LOW){ //AN32 구역에서 불합격일 때
D32 = 0; // AN32 구역의 D32은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN32 = 0; // 다시 AN32은 0으로 선언해서 AN32은 검사가 끝났다는 의미
AN33 = 1;  // 새로운 AN33은 1로 선언해서 AN33 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
// ▶▶▶▶▶▶▶▶▶                            A   N   3   3                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN33 ==1 && digitalRead(BS1) ==LOW){ //AN33 구역에서 합격일 때
D33 = 1; //AN33 구역의 D33은 합격 했으니 1으로
AN33 = 0; // 다시 AN33은 0으로 선언해서 AN33은 검사가 끝났다는 의미
AN34 = 1;  // 새로운 AN34은 1로 선언해서 AN34 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN33 ==1 && digitalRead(BS2) ==LOW){ //AN33 구역에서 불합격일 때
D33 = 0; // AN33 구역의 D33은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN33 = 0; // 다시 AN33은 0으로 선언해서 AN33은 검사가 끝났다는 의미
AN34 = 1;// 새로운 AN34은 1로 선언해서 AN34 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                            A   N   3   4                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN34 ==1 && digitalRead(BS1) ==LOW){ //AN34 구역에서 합격일 때
D34 = 1; //AN34 구역의 D34은 합격 했으니 1으로
AN34 = 0; // 다시 AN34은 0으로 선언해서 AN34은 검사가 끝났다는 의미
AN35 = 1;// 새로운 AN35은 1로 선언해서 AN35 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN34 ==1 && digitalRead(BS2) ==LOW){ //AN34 구역에서 불합격일 때
D34 = 0; // AN34 구역의 D34은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN34 = 0; // 다시 AN34은 0으로 선언해서 AN34은 검사가 끝났다는 의미
AN35 = 1;// 새로운 AN35은 1로 선언해서 AN35 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
// ▶▶▶▶▶▶▶▶▶                            A   N   3   5                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN35 ==1 && digitalRead(BS1) ==LOW){ //AN35 구역에서 합격일 때
D35 = 1; //AN35 구역의 D35은 합격 했으니 1으로
AN35 = 0; // 다시 AN35은 0으로 선언해서 AN35은 검사가 끝났다는 의미
AN36 = 1;// 새로운 AN36은 1로 선언해서 AN36 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN35 ==1 && digitalRead(BS2) ==LOW){ //AN35 구역에서 불합격일 때
D35 = 0; // AN35 구역의 D35은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN35 = 0; // 다시 AN35은 0으로 선언해서 AN35은 검사가 끝났다는 의미
AN36 = 1;// 새로운 AN36은 1로 선언해서 AN36 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
// ▶▶▶▶▶▶▶▶▶                           A   N   3   6                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN36 ==1 && digitalRead(BS1) ==LOW){ //AN36 구역에서 합격일 때
D36 = 1; //AN36 구역의 D36은 합격 했으니 1으로
AN36 = 0; // 다시 AN36은 0으로 선언해서 AN36은 검사가 끝났다는 의미
AN37 = 1;// 새로운 AN37은 1로 선언해서 AN37 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN36 ==1 && digitalRead(BS2) ==LOW){ //AN36 구역에서 불합격일 때
D36 = 0; // AN36 구역의 D36은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN36 = 0; // 다시 AN36은 0으로 선언해서 AN36은 검사가 끝났다는 의미
AN37 = 1;// 새로운 AN37은 1로 선언해서 AN37 검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                           A   N   3   7                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN37 ==1 && digitalRead(BS1) ==LOW){ //AN37 구역에서 합격일 때
D37 = 1; //AN37 구역의 D37은 합격 했으니 1으로
AN37 = 0; // 다시 AN37은 0으로 선언해서 AN37은 검사가 끝났다는 의미
AN38 = 1;// 새로운 AN38은 1로 선언해서 AN38검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN37 ==1 && digitalRead(BS2) ==LOW){ //AN37 구역에서 불합격일 때
D37 = 0; // AN37 구역의 D37은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN37 = 0; // 다시 AN37은 0으로 선언해서 AN37은 검사가 끝났다는 의미
AN38 = 1; // 새로운 AN38은 1로 선언해서 AN38검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                             A   N   3   8                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN38 ==1 && digitalRead(BS1) ==LOW){ //AN38 구역에서 합격일 때
D38 = 1; //AN38 구역의 D38은 합격 했으니 1으로
AN38 = 0; // 다시 AN38은 0으로 선언해서 AN38은 검사가 끝났다는 의미
AN39 = 1; // 새로운 AN39은 1로 선언해서 AN39검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN38 ==1 && digitalRead(BS2) ==LOW){ //AN38 구역에서 불합격일 때
D38 = 0; // AN38 구역의 D38은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ******************************************불합격과 차이는 이 부분
AN38 = 0; // 다시 AN38은 0으로 선언해서 AN38은 검사가 끝났다는 의미
AN39 = 1; // 새로운 AN39은 1로 선언해서 AN39검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                              A   N   3   9                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------

// -------------------------------------------------------------------●합격●
if(AN39 ==1 && digitalRead(BS1) ==LOW){ //AN39 구역에서 합격일 때
D39 = 1; //AN39 구역의 D39은 합격 했으니 1으로
AN39 = 0; // 다시 AN39은 0으로 선언해서 AN39은 검사가 끝났다는 의미
AN40 = 1; // 새로운 AN40은 1로 선언해서 AN40검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN39 ==1 && digitalRead(BS2) ==LOW){ //AN39 구역에서 불합격일 때
D39 = 0; // AN39 구역의 D39은 불합격 했으니 0으로
AIR();  // 에어해머 작동 ****************************************** 불합격과 차이는 이 부분
AN39 = 0; // 다시 AN39은 0으로 선언해서 AN39은 검사가 끝났다는 의미
AN40 = 1; // 새로운 AN40은 1로 선언해서 AN40검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶▶▶▶                            A   N   4   0                         ◀◀◀◀◀◀◀◀◀◀
//---------------------------------------------------------------------------------------------
 
// -------------------------------------------------------------------●합격●
if(AN40 ==1 && digitalRead(BS1) ==LOW){ //AN40 구역에서 합격일 때
D40 = 1; //AN40 구역의 D40은 합격 했으니 1으로
AN40 = 0; // 다시 AN40은 0으로 선언해서 AN40은 검사가 끝났다는 의미
AN1 = 1; // 새로운 AN1은 1로 선언해서 AN1검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

// -------------------------------------------------------------------○불합격○
if(AN40 ==1 && digitalRead(BS2) ==LOW){ //AN40 구역에서 불합격일 때
D40 = 0; // AN40 구역의 D40은 불합격 했으니 0으로
AIR();  //에어해머 작동 ******************************************불합격과 차이는 이 부분
AN40 = 0; // 다시 AN40은 0으로 선언해서 AN40은 검사가 끝났다는 의미
AN1 = 1; // 새로운 AN1은 1로 선언해서 AN1검사를 시작할거라는 의미

ONCE(); // ONCE 함수는 BLDC 모터 작동 (다음 구역으로 이동한다는 뜻)
SIG(); //SIG 함수는 SIGANL 즉 검사 요청을 다른 아두이노로 보낸다는 뜻이다
}

//---------------------------------------------------------------------------------------------
//                                  ▲ 최 종 구 간 사 이 렌 ▲
//---------------------------------------------------------------------------------------------
 
//▶▶▶▶▶▶설명◀◀◀◀◀◀◀

// *** 최종 합격 구간 *** 작업종료 사이렌 ***
// D1 ~ D50의 구역이 하나도 빠짐 없이 전부 1이 되었을 때 만,(하나라도 남았을 때, 재점검) 
// 만약 예를들어 D12구역이 0이고 나머지가 다 1일 때,
// D12구역까지 진행 한 다음 D12 구역이 클리어 되었을 때
// 사이렌이 울리며 멈춘다.
// 구역이 세 군데 남아있어도 마찬가지
// 담당자는 꺼야만 사이렌이 꺼진다(확인용)

if(D1 ==1 && D2 ==1 && D3 ==1 && D4 ==1 && D5 ==1&&D6 ==1 && D7 ==1 && D8 ==1 && D9 ==1 && D10 ==1 &&D11 ==1 && D12 ==1 && D13 ==1 && D14 ==1 && D15 ==1 && D16 ==1 && D17 ==1 && D18 ==1 && D19 ==1 && D20 ==1 &&D21 ==1 && D22 ==1 && D23 ==1 && D24 ==1 && D25 ==1 && D26 ==1 && D27 ==1 && D28 ==1 && D29 ==1 && D30 ==1 && D31 ==1 && D32 ==1&& D33 ==1&& D34 ==1&& D35 ==1&& D36 ==1&& D37 ==1&& D38 ==1&& D39 ==1&& D40 ==1){ //각 구역의 통과 신호 D1~D3이 1일 때,
digitalWrite(SIRN,255); //사이렌이 울린다 
Serial.print("끝----------------------");
delay(1000000000000000000000); //220V 전원이 꺼질 때 까지 무한한 시간으로
}
} //▲▲▲▲▲▲VOID LOOP 함수 닫힘▲▲▲▲▲▲

//---------------------------------------------------------------------------------------------
//                       O N C E 함 수 선 언 ( B L D C 각 도 시 간 조 절 코 딩 )
//---------------------------------------------------------------------------------------------
 //▶▶▶▶▶▶설명◀◀◀◀◀◀◀
 
 //ONCE는 한번을 뜻하는 의미
 //BLDC 각도 조절용 저장 함수를 밑에다 기입함으로써 조금 더 코딩을 간결화 시켰다
 //이 함수 코딩 덕분에 다른 구역 하나하나 각도 조절을하지 않고 시간이나 다른 디테일은 여기서 수정하면
 //다른 구역에 있는 코딩도 전부 수정 된다.
 
void ONCE(){ // *ONCE 함수 BLDC 각도 조절 한 번
  
//****BLDC 각도 조절용 시간 ****//
//****************************//

digitalWrite(BLDC,255); //BLDC 각도 조절용 ON
delay(100); //안정화 delay 및 접촉용
            //현재 0.5초 입니다

digitalWrite(BLDC,0); //BLDC 각도 조절용 OFF
delay(100); //<-- ★★★★★ 수정하려면 여기 BLDC 각도 조절 중지 시간 및 아두이노 값 안정화 delay

delay(10000); //<-- ★★★★★수정하려면 여기 ***BLDC 각도 조절용 시간 1000 - 1초***
              //현재 10초입니다

} 
//---------------------------------------------------------------------------------------------
//               A I R 함 수 선 언 ( 슬 레 노 이 드 밸 브 가 동 시 간 조 절 코 딩 )
//---------------------------------------------------------------------------------------------
//▶▶▶▶▶▶설명◀◀◀◀◀◀◀
//솔레노이드 밸브에 있는 릴레이 작동을 ON / OFF 시킨다.
//솔레노이드 밸브가 열리면 에어 해머가 작동이 되며
//닫으면 에어해머가 꺼진다
//이 함수 코딩 덕분에 다른 구역 하나하나 각도 조절을하지 않고 시간이나 다른 디테일은 여기서 수정하면
//다른 구역에 있는 코딩도 전부 수정 된다.

void AIR(){ // *AIR 함수 에어 해머(솔레노이드 밸브) 한 번
  
//****솔레노이드 밸브 조절용 시간 ****//
//********************************//

digitalWrite(AIRH,255); // 솔레노이드 밸브 ON
delay(3000); //<-- ★★★★★수정하려면 여기 ***솔레노이드 밸브 조절용 시간 1000- 1초***
             //현재 3.0초 입니다
                
digitalWrite(AIRH,0); //BLDC 각도 조절용 OFF
delay(100); //<-- ★★★★★수정하려면 여기 솔레노이드 밸브 작동 중지 시간 및 아두이노 값 안정화 delay 

}   
//---------------------------------------------------------------------------------------------
//               S I G 함 수 선 언 ( 신 호 릴 레 이 가 동 시 간 조 절 코 딩 )
//---------------------------------------------------------------------------------------------
 //▶▶▶▶▶▶설명◀◀◀◀◀◀◀
//SIGNAL의 약자를 뜻하는 SIG 함수
//각 구역의 에어해머 혹은 BLDC모터로 각도 이동이 끝난 뒤
//검사 신호를 보내는 SIG 함수다
//이 함수 코딩 덕분에 다른 구역 하나하나 각도 조절을하지 않고 시간이나 다른 디테일은 여기서 수정하면
//다른 구역에 있는 코딩도 전부 수정 된다.

void SIG(){ // *AIR 함수 에어 해머(솔레노이드 밸브) 한 번
  
digitalWrite(AS1,255); //아두이노 B_ sensing 신호 값 전달 릴레이 ON
delay(2500); //아두이노 값 안정화 delay 현재 2500 = 2.5초로 설정해놓기

digitalWrite(AS1,0); //아두이노 B_ sensing 신호 값 전달 릴레이 OFF
delay(100); //아두이노 값 안정화 delay 현재 100 = 0.1초로 설정해놓기
}
//---------------------------------------------------------------------------------------
